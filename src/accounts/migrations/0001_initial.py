# Generated by Django 5.2.4 on 2025-07-25 13:51

import accounts.managers
import accounts.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Enter a valid email address. Used for login.', max_length=254, unique=True, verbose_name='Email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time when the account was created.', verbose_name='Date joined')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this account is active.', verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can access the admin site.', verbose_name='Staff status')),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the user as deleted instead of actually removing them.', verbose_name='Deleted')),
                ('role', models.CharField(choices=[('patient', 'Patient'), ('doctor', 'Doctor'), ('staff', 'Staff'), ('admin', 'Admin')], default='patient', help_text="Defines the user's role: patient, doctor, staff or admin.", max_length=10, verbose_name='Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['email'],
            },
            managers=[
                ('objects', accounts.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, help_text='Enter your full name.', max_length=100, verbose_name='Full name')),
                ('date_of_birth', models.DateField(blank=True, help_text='Enter your birth date (must be at least 18 years old).', null=True, validators=[accounts.validators.validate_age_over_18], verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], help_text='Select your gender (optional).', max_length=10, verbose_name='Gender')),
                ('phone', models.CharField(blank=True, help_text='Optional contact number.', max_length=20, verbose_name='Phone number')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='The date and time when this profile was last modified.', verbose_name='Last Updated')),
                ('user', models.OneToOneField(help_text='The user this profile belongs to.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['user__email'],
            },
        ),
        migrations.CreateModel(
            name='DoctorPatientLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the doctor–patient relationship was created.', verbose_name='Date linked')),
                ('doctor', models.ForeignKey(help_text='The doctor in this relationship.', limit_choices_to={'role': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='linked_patients', to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
                ('patient', models.ForeignKey(help_text='The patient in this relationship.', limit_choices_to={'role': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='linked_doctors', to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Doctor–Patient Link',
                'verbose_name_plural': 'Doctor–Patient Links',
                'ordering': ['-created_at'],
                'unique_together': {('doctor', 'patient')},
            },
        ),
    ]
