# Generated by Django 5.2.4 on 2025-08-02 20:54

import django.db.models.deletion
import django.utils.timezone
import records.models
import records.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DirectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the medical direction (e.g., Cardiology).', max_length=50, unique=True, verbose_name='Direction Name')),
                ('code', models.SlugField(help_text='URL-friendly identifier for the direction.', unique=True, verbose_name='Direction Code')),
            ],
            options={
                'verbose_name': 'Direction',
                'verbose_name_plural': 'Directions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CardiologyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic', models.PositiveSmallIntegerField(blank=True, help_text='Systolic pressure (upper value in mmHg).', null=True, verbose_name='Systolic Pressure')),
                ('diastolic', models.PositiveSmallIntegerField(blank=True, help_text='Diastolic pressure (lower value in mmHg).', null=True, verbose_name='Diastolic Pressure')),
                ('pulse', models.PositiveSmallIntegerField(blank=True, help_text='Pulse in beats per minute (bpm).', null=True, validators=[records.validators.validate_pulse], verbose_name='Pulse (bpm)')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Date of the measurement.', verbose_name='Date')),
                ('time', models.TimeField(default=records.models.get_current_time, help_text='Time of the measurement.', verbose_name='Time')),
                ('notes', models.TextField(blank=True, help_text='Optional notes for this cardiology record.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the record was created.', verbose_name='Created At')),
                ('patient', models.ForeignKey(help_text='The patient to whom this cardiology record belongs.', limit_choices_to={'role': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='cardiology_records', to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Cardiology Record',
                'verbose_name_plural': 'Cardiology Records',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='EndocrinologyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_sugar', models.DecimalField(decimal_places=2, help_text='Blood sugar level in mmol/L.', max_digits=5, verbose_name='Blood Sugar')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Date of the measurement.', verbose_name='Date')),
                ('time', models.TimeField(default=records.models.get_current_time, help_text='Time of the measurement.', verbose_name='Time')),
                ('notes', models.TextField(blank=True, help_text='Optional notes for this endocrinology record.', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the record was created.', verbose_name='Created At')),
                ('patient', models.ForeignKey(help_text='The patient to whom this endocrinology record belongs.', limit_choices_to={'role': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='endocrinology_records', to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Endocrinology Record',
                'verbose_name_plural': 'Endocrinology Records',
                'ordering': ['-date', '-time'],
            },
        ),
    ]
